---
import { Collection } from "@components/collection";

const res = await fetch(`${Astro.url.origin}/collection.json`);
const collection = (await res.json()) as Collection;
---

<!doctype html>
<html class="no-js" lang="">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title></title>
    <meta name="description" content="" />

    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <meta property="og:image:alt" content="" />

    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/icon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="icon.png" />

    <link rel="manifest" href="site.webmanifest" />
    <meta name="theme-color" content="#fafafa" />

    <script>
      const audio = document.getElementsByTagName("audio")[0] as HTMLAudioElement;
      const buttons = document.querySelectorAll("button");
      buttons.forEach((button) => {
        button.addEventListener("click", (e) => {
          const el = e.target as HTMLButtonElement;
          const link = el.dataset.link;
          if (!link) return;

          audio.src = link;
          audio.play();
        });
      });
    </script>
  </head>

  <body class="m-4 space-y-4">
    <audio></audio>
    <div class="">
      <p>{collection.title} by {collection.author}</p>
      <p class="italic">{collection.description}</p>
    </div>

    <ul class="space-y-4">
      {
        collection.playlists.map((playlist, pi) => (
          <>
            <li class="font-bold">
              {pi.toString().padStart(2, "0")}. {playlist.title} by {playlist.author}
            </li>
            <ul class="">
              {playlist.tracks.map((track, ti) => (
                <li>
                  <button
                    class="h-8 w-8 rounded text-center"
                    class:list={track.link == "" ? "bg-blue-200" : "bg-blue-500 hover:bg-blue-700"}
                    data-link={track.link}
                    disabled={track.link == "" ? true : undefined}
                  >
                    {ti.toString().padStart(2, "0")}
                  </button>
                  {track.title}
                </li>
              ))}
            </ul>
          </>
        ))
      }
    </ul>
  </body>
</html>
